name: 'Parse Release Intent'
description: 'Parse release intent from configuration files and workflow inputs'

on:
  workflow_call:
    inputs:
      level:
        description: 'Release level'
        required: false
        default: ''
        type: string
      python:
        description: 'Python package release'
        required: false
        default: ''
        type: string
      docker:
        description: 'Docker image release'
        required: false
        default: ''
        type: string
      docs:
        description: 'Documentation versioning'
        required: false
        default: ''
        type: string
      notes:
        description: 'Release notes'
        required: false
        default: ''
        type: string
      python-version:
        description: 'Python version to use'
        required: false
        default: '3.13'
        type: string

    outputs:
      do_release:
        description: 'Whether to proceed with release'
        value: ${{ jobs.parse_intent.outputs.do_release }}
      level:
        description: 'Computed release level'
        value: ${{ jobs.parse_intent.outputs.level }}
      python:
        description: 'Python release decision'
        value: ${{ jobs.parse_intent.outputs.python }}
      docker:
        description: 'Docker release decision'
        value: ${{ jobs.parse_intent.outputs.docker }}
      docs:
        description: 'Documentation release decision (legacy)'
        value: ${{ jobs.parse_intent.outputs.docs }}
      docs_mode:
        description: 'Documentation release mode'
        value: ${{ jobs.parse_intent.outputs.docs_mode }}
      docs_sections:
        description: 'Documentation sections to version'
        value: ${{ jobs.parse_intent.outputs.docs_sections }}
      docs_strategy:
        description: 'Documentation versioning strategy'
        value: ${{ jobs.parse_intent.outputs.docs_strategy }}
      notes:
        description: 'Release notes'
        value: ${{ jobs.parse_intent.outputs.notes }}

jobs:
  parse_intent:
    name: Parse Release Intent
    runs-on: ubuntu-latest
    outputs:
      do_release: ${{ steps.intent.outputs.do_release }}
      level: ${{ steps.intent.outputs.level }}
      python: ${{ steps.intent.outputs.python }}
      docker: ${{ steps.intent.outputs.docker }}
      docs: ${{ steps.intent.outputs.docs }}
      docs_mode: ${{ steps.intent.outputs.docs_mode }}
      docs_sections: ${{ steps.intent.outputs.docs_sections }}
      docs_strategy: ${{ steps.intent.outputs.docs_strategy }}
      notes: ${{ steps.intent.outputs.notes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download CI script files if not present
        shell: bash
        run: |
          echo "Checking for required CI script files..."
          
          # Create scripts directory if it doesn't exist
          mkdir -p scripts/ci
          
          # Function to download file if it doesn't exist
          download_if_missing() {
            local file_path="$1"
            local remote_url="$2"
            
            if [ ! -f "$file_path" ]; then
              echo "Downloading missing file: $file_path"
              curl -fsSL "$remote_url" -o "$file_path"
              echo "✅ Downloaded: $file_path"
            else
              echo "✅ Found locally: $file_path"
            fi
          }
          
          # Download required files from template repository
          BASE_URL="https://raw.githubusercontent.com/Chisanan232/Template-Python-UV-Project/master"
          
          download_if_missing "scripts/pyproject.toml" "$BASE_URL/scripts/pyproject.toml"
          download_if_missing "scripts/uv.lock" "$BASE_URL/scripts/uv.lock"
          download_if_missing "scripts/ci/release_intent.py" "$BASE_URL/scripts/ci/release_intent.py"
          
          echo "All required CI script files are ready!"

      - name: Setup Python with UV
        uses: Chisanan232/Template-Python-UV-Project/.github/actions/setup-python-uv@master
        with:
          python-version: ${{ inputs.python-version }}
          install-dependencies: 'true'
          working-directory: 'scripts'

      - name: Parse release intent
        id: intent
        env:
          INPUT_LEVEL: ${{ inputs.level }}
          INPUT_PYTHON: ${{ inputs.python }}
          INPUT_DOCKER: ${{ inputs.docker }}
          INPUT_DOCS: ${{ inputs.docs }}
          INPUT_NOTES: ${{ inputs.notes }}
        working-directory: scripts
        run: uv run release-intent
